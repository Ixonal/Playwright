{"version":3,"sources":["ArrayMap.js","ArrayMap.ts"],"names":["System","register","exports_1","context_1","indexOf_1","ArrayMap","id","setters","indexOf_1_1","execute","this","_keys","_vals","prototype","getVal","key","index","setVal","val","push"],"mappings":"AAAAA,OAAOC,UAAU,aAAc,SAASC,EAAWC,GAC/C,YACA,IACIC,GACAC,CAFeF,IAAaA,EAAUG,EAG1C,QACIC,SACI,SAAUC,GACNJ,EAAYI,IAEpBC,QAAS,WCJjBJ,EAAA,WAAA,QAAAA,KAEUK,KAAAC,SACAD,KAAAE,SAmBV,MAjBSP,GAAAQ,UAAAC,OAAP,SAAcC,GACZ,GAAIC,GAAQZ,EAAA,WAAQM,KAAKC,MAAOI,EAEhC,OAAOL,MAAKE,MAAMI,IAAU,MAGvBX,EAAAQ,UAAAI,OAAP,SAAcF,EAAUG,GACtB,GAAIF,GAAQZ,EAAA,WAAQM,KAAKC,MAAOI,EAE7BC,GAAQ,GACTN,KAAKE,MAAMI,GAASE,GAEpBR,KAAKC,MAAMQ,KAAKJ,GAChBL,KAAKE,MAAMO,KAAKD,KAItBb,KAtBAH,EAAA,WAAAG","file":"ArrayMap.js","sourcesContent":["System.register([\"./indexOf\"], function(exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 && context_1.id;\n    var indexOf_1;\n    var ArrayMap;\n    return {\n        setters:[\n            function (indexOf_1_1) {\n                indexOf_1 = indexOf_1_1;\n            }],\n        execute: function() {\n            ArrayMap = (function () {\n                function ArrayMap() {\n                    this._keys = [];\n                    this._vals = [];\n                }\n                ArrayMap.prototype.getVal = function (key) {\n                    var index = indexOf_1[\"default\"](this._keys, key);\n                    return this._vals[index] || null;\n                };\n                ArrayMap.prototype.setVal = function (key, val) {\n                    var index = indexOf_1[\"default\"](this._keys, key);\n                    if (index > -1) {\n                        this._vals[index] = val;\n                    }\n                    else {\n                        this._keys.push(key);\n                        this._vals.push(val);\n                    }\n                };\n                return ArrayMap;\n            }());\n            exports_1(\"ArrayMap\", ArrayMap);\n        }\n    }\n});","import indexOf from \"./indexOf\";\r\n\r\n/*\r\n * Effectively a WeakMap, but using arrays... Suppose I should \r\n * use an actual WeakMap polyfill... meh, we'll get to that later.\r\n */\r\nexport class ArrayMap<T> {\r\n  \r\n  private _keys: any[] = [];\r\n  private _vals: T[] = [];\r\n  \r\n  public getVal(key: any): T {\r\n    let index = indexOf(this._keys, key);\r\n    \r\n    return this._vals[index] || null;\r\n  }\r\n  \r\n  public setVal(key: any, val: T) {\r\n    let index = indexOf(this._keys, key);\r\n    \r\n    if(index > -1) {\r\n      this._vals[index] = val;\r\n    } else {\r\n      this._keys.push(key);\r\n      this._vals.push(val);\r\n    }\r\n  }\r\n  \r\n}\r\n"],"sourceRoot":"/source/"}