{"version":3,"sources":["SceneInterface.js","SceneInterface.ts"],"names":["System","register","exports_1","context_1","SceneSceneBuilder_1","ActorSceneBuilder_1","ArrayMap_1","SceneInterface","id","setters","SceneSceneBuilder_1_1","ActorSceneBuilder_1_1","ArrayMap_1_1","execute","scene","this","_sceneBuilders","ArrayMap","_scene","prototype","actor","actorBuilder","getVal","ActorSceneBuilder","setVal","sceneBuilder","SceneSceneBuilder"],"mappings":"AAAAA,OAAOC,UAAU,sBAAuB,sBAAuB,oBAAqB,SAASC,EAAWC,GACpG,YACA,IACIC,GAAqBC,EAAqBC,EAC1CC,CAFeJ,IAAaA,EAAUK,EAG1C,QACIC,SACI,SAAUC,GACNN,EAAsBM,GAE1B,SAAUC,GACNN,EAAsBM,GAE1B,SAAUC,GACNN,EAAaM,IAErBC,QAAS,WCTjBN,EAAA,WACE,QAAAA,GAAYO,GAKJC,KAAAC,eAAyC,GAAIV,GAAAW,SAJnDF,KAAKG,OAASJ,EAuBlB,MAjBSP,GAAAY,UAAAC,MAAP,SAAaA,GACX,GAAIC,GAAqDN,KAAKC,eAAeM,OAAOF,EAKpF,OAJIC,KACFA,EAAe,GAAIhB,GAAAkB,kBAAkBH,EAAOL,KAAKG,QACjDH,KAAKC,eAAeQ,OAAOJ,EAAOC,IAE7BA,GAGFd,EAAAY,UAAAL,MAAP,WACE,GAAIW,GAAqDV,KAAKC,eAAeM,OAAOP,KAAKG,OAKzF,OAJIO,KACFA,EAAe,GAAIrB,GAAAsB,kBAAkBX,KAAKG,QAC1CH,KAAKC,eAAeQ,OAAOT,KAAKG,OAAQO,IAEnCA,GAEXlB,KAzBAL,EAAA,iBAAAK","file":"SceneInterface.js","sourcesContent":["System.register([\"./SceneSceneBuilder\", \"./ActorSceneBuilder\", \"../util/ArrayMap\"], function(exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 && context_1.id;\n    var SceneSceneBuilder_1, ActorSceneBuilder_1, ArrayMap_1;\n    var SceneInterface;\n    return {\n        setters:[\n            function (SceneSceneBuilder_1_1) {\n                SceneSceneBuilder_1 = SceneSceneBuilder_1_1;\n            },\n            function (ActorSceneBuilder_1_1) {\n                ActorSceneBuilder_1 = ActorSceneBuilder_1_1;\n            },\n            function (ArrayMap_1_1) {\n                ArrayMap_1 = ArrayMap_1_1;\n            }],\n        execute: function() {\n            SceneInterface = (function () {\n                function SceneInterface(scene) {\n                    this._sceneBuilders = new ArrayMap_1.ArrayMap();\n                    this._scene = scene;\n                }\n                SceneInterface.prototype.actor = function (actor) {\n                    var actorBuilder = this._sceneBuilders.getVal(actor);\n                    if (!actorBuilder) {\n                        actorBuilder = new ActorSceneBuilder_1.ActorSceneBuilder(actor, this._scene);\n                        this._sceneBuilders.setVal(actor, actorBuilder);\n                    }\n                    return actorBuilder;\n                };\n                SceneInterface.prototype.scene = function () {\n                    var sceneBuilder = this._sceneBuilders.getVal(this._scene);\n                    if (!sceneBuilder) {\n                        sceneBuilder = new SceneSceneBuilder_1.SceneSceneBuilder(this._scene);\n                        this._sceneBuilders.setVal(this._scene, sceneBuilder);\n                    }\n                    return sceneBuilder;\n                };\n                return SceneInterface;\n            }());\n            exports_1(\"SceneInterface\", SceneInterface);\n        }\n    }\n});","import { Scene } from \"./Scene\";\r\nimport { SceneBuilder } from \"./SceneBuilder\";\r\nimport { SceneSceneBuilder } from \"./SceneSceneBuilder\";\r\nimport { ActorSceneBuilder } from \"./ActorSceneBuilder\";\r\nimport { ArrayMap } from \"../util/ArrayMap\";\r\nimport { Actor } from \"../actor/Actor\";\r\n\r\nexport class SceneInterface {\r\n  constructor(scene: Scene) {\r\n    this._scene = scene;\r\n  }\r\n  \r\n  private _scene: Scene;\r\n  private _sceneBuilders: ArrayMap<SceneBuilder> = new ArrayMap<SceneBuilder>();\r\n  \r\n  public actor(actor: Actor) : ActorSceneBuilder {\r\n    let actorBuilder: ActorSceneBuilder = <ActorSceneBuilder>this._sceneBuilders.getVal(actor);\r\n    if(!actorBuilder) {\r\n      actorBuilder = new ActorSceneBuilder(actor, this._scene);\r\n      this._sceneBuilders.setVal(actor, actorBuilder);\r\n    }\r\n    return actorBuilder;\r\n  }\r\n  \r\n  public scene() : SceneSceneBuilder {\r\n    let sceneBuilder: SceneSceneBuilder = <SceneSceneBuilder>this._sceneBuilders.getVal(this._scene);\r\n    if(!sceneBuilder) {\r\n      sceneBuilder = new SceneSceneBuilder(this._scene);\r\n      this._sceneBuilders.setVal(this._scene, sceneBuilder);\r\n    }\r\n    return sceneBuilder;\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}