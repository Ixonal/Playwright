{"version":3,"sources":["Scene.js","Scene.ts"],"names":["System","register","exports_1","context_1","SceneInterface_1","Scene","id","setters","SceneInterface_1_1","execute","name","script","this","_actions","_name","SceneInterface","Object","defineProperty","prototype","get","enumerable","configurable","play","stage"],"mappings":"AAAAA,OAAOC,UAAU,oBAAqB,SAASC,EAAWC,GACtD,YACA,IACIC,GACAC,CAFeF,IAAaA,EAAUG,EAG1C,QACIC,SACI,SAAUC,GACNJ,EAAmBI,IAE3BC,QAAS,WCNjBJ,EAAA,WAEE,QAAAA,GAAYK,EAAcC,GAM1BC,KAAAC,YALED,KAAKE,MAAQJ,EACbC,EAAO,GAAIP,GAAAW,eAAeH,OAa9B,MAPEI,QAAAC,eAAWZ,EAAAa,UAAA,QDIOC,ICJlB,WACE,MAAOP,MAAKE,ODMIM,YAAY,EACZC,cAAc,ICJzBhB,EAAAa,UAAAI,KAAP,SAAYC,KAGdlB,KAjBAH,EAAA,QAAAG","file":"Scene.js","sourcesContent":["System.register([\"./SceneInterface\"], function(exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 && context_1.id;\n    var SceneInterface_1;\n    var Scene;\n    return {\n        setters:[\n            function (SceneInterface_1_1) {\n                SceneInterface_1 = SceneInterface_1_1;\n            }],\n        execute: function() {\n            Scene = (function () {\n                function Scene(name, script) {\n                    this._actions = [];\n                    this._name = name;\n                    script(new SceneInterface_1.SceneInterface(this));\n                }\n                Object.defineProperty(Scene.prototype, \"name\", {\n                    get: function () {\n                        return this._name;\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Scene.prototype.play = function (stage) {\n                };\n                return Scene;\n            }());\n            exports_1(\"Scene\", Scene);\n        }\n    }\n});","import { SceneAction } from \"./SceneAction\";\r\nimport { SceneInterface } from \"./SceneInterface\";\r\nimport { Stage } from \"../Stage\";\r\n\r\nexport class Scene {\r\n  \r\n  constructor(name: string, script: (a: SceneInterface) => void) {\r\n    this._name = name;\r\n    script(new SceneInterface(this));\r\n  }\r\n  \r\n  _name: string;\r\n  _actions: SceneAction[] = [];\r\n  \r\n  public get name() {\r\n    return this._name;\r\n  }\r\n  \r\n  public play(stage: Stage) {\r\n    //todo: do something with the scene actions and the stage here...\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}